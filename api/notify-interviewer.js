// Vercel serverless function to notify interviewer when interview is completed
import sgMail from '@sendgrid/mail';

export default async function handler(req, res) {
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  try {
    const {
      candidateName,
      templateName,
      company,
      role,
      fileName,
      answeredQuestions,
      totalQuestions,
      timestamp,
      fileBlob
    } = req.body;

    console.log('Interview completed notification:', {
      candidateName,
      templateName,
      company,
      role,
      fileName,
      answeredQuestions,
      totalQuestions,
      timestamp
    });

    // Set up SendGrid API key from environment variables
    const SENDGRID_API_KEY = process.env.SENDGRID_API_KEY;
    const INTERVIEWER_EMAIL = process.env.INTERVIEWER_EMAIL || 'srn@synapserecruiternetwork.com';

    if (SENDGRID_API_KEY) {
      try {
        sgMail.setApiKey(SENDGRID_API_KEY);

        const msg = {
          to: INTERVIEWER_EMAIL,
          from: 'interviews@synapseint.com', // Verified sender
          subject: `New Interview Completed: ${candidateName} - ${company} ${role}`,
          html: `
            <h2>New Interview Completed</h2>
            <p><strong>Candidate:</strong> ${candidateName}</p>
            <p><strong>Position:</strong> ${role} at ${company}</p>
            <p><strong>Template:</strong> ${templateName}</p>
            <p><strong>Completion:</strong> ${answeredQuestions}/${totalQuestions} questions answered</p>
            <p><strong>Completed:</strong> ${new Date(timestamp).toLocaleString()}</p>
            <p><strong>File:</strong> ${fileName}</p>
            
            <hr>
            <p>The interview recording package is attached to this email.</p>
            <p><em>This email was automatically generated by AI Interview App.</em></p>
          `,
          // TODO: Attach the actual file blob
          // attachments: [{
          //   content: fileBlob,
          //   filename: fileName,
          //   type: 'application/zip',
          //   disposition: 'attachment'
          // }]
        };

        await sgMail.send(msg);
        
        return res.status(200).json({
          success: true,
          message: 'Interviewer notified via email successfully'
        });

      } catch (emailError) {
        console.error('Email send failed:', emailError);
        // Fall back to logging
      }
    }

    // Fallback: Log to console (visible in Vercel function logs)
    console.log('ðŸ“§ NEW INTERVIEW COMPLETED:', {
      candidate: candidateName,
      position: `${role} at ${company}`,
      template: templateName,
      completion: `${answeredQuestions}/${totalQuestions}`,
      timestamp: new Date(timestamp).toLocaleString(),
      fileName: fileName
    });

    return res.status(200).json({
      success: true,
      message: 'Interview logged successfully'
    });

  } catch (error) {
    console.error('Notification error:', error);
    return res.status(500).json({
      error: 'Notification failed',
      details: error.message
    });
  }
}
